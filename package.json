{
  "name": "vstoys",
  "displayName": "VsToys",
  "description": "VsCode Toys is a collection of utilities for Visual Studio Code.",
  "version": "0.0.5",
  "publisher": "Logonz",
  "icon": "icon.jpg",
  "license": "MIT",
  "engines": {
    "vscode": "^1.89.1"
  },
  "categories": [
    "Other",
    "Keymaps"
  ],
  "main": "./dist/extension.js",
  "repository": {
    "type": "git",
    "url": "https://github.com/Logonz/vscode-toys.git"
  },
  "activationEvents": [
    "onStartupFinished"
  ],
  "contributes": {
    "commands": [
      {
        "command": "vstoys.smart-open.openSmart",
        "title": "VsToys: SmartOpen"
      },
      {
        "command": "vstoys.git.stageFile",
        "title": "VsToys - Git: Stage File"
      },
      {
        "command": "vstoys.git.stageHunk",
        "title": "VsToys - Git: Stage Hunk at Selection"
      },
      {
        "command": "vstoys.double-action.execute",
        "title": "VsToys - DoubleAction: Execute"
      },
      {
        "command": "vstoys.dot-repeat.repeatExecute",
        "title": "VsToys - DotRepeat: repeatExecute"
      },
      {
        "command": "vstoys.dot-repeat.repeatExit",
        "title": "VsToys - DotRepeat: repeatExit"
      }
    ],
    "configuration": {
      "title": "Visual Studio Code Toys - Configuration",
      "properties": {
        "vstoys.enabled": {
          "type": "boolean",
          "default": false,
          "description": "Global enable/disable for the VSCode Toys"
        },
        "vstoys.smart-open.enabled": {
          "type": "boolean",
          "default": true,
          "description": "Enable the Smart Open module in VSCode Toys"
        },
        "vstoys.git.enabled": {
          "type": "boolean",
          "default": true,
          "description": "Enable the Git module in VSCode Toys"
        },
        "vstoys.double-action.timeoutPress": {
          "type": "boolean",
          "default": false,
          "description": "If true, the extension will wait for a timeout to execute the single press command rather than executing it immediately and if within the timeout only execute the double press, the default behavior will execute the single press command immediately and the double press command after the double press threshold"
        },
        "vstoys.double-action.singlePressCommand": {
          "type": "string",
          "default": "findJump.activate",
          "description": "Command to execute when single pressing the key"
        },
        "vstoys.double-action.preDoublePressCommand": {
          "type": "string",
          "default": "findJump.activateWithSelection",
          "description": "Command to execute before executing the double press command (I personally use this to exit a previos command)"
        },
        "vstoys.double-action.doublePressCommand": {
          "type": "string",
          "default": "findJump.activateWithSelection",
          "description": "Command to execute when double pressing the key"
        },
        "vstoys.double-action.doublePressThreshold": {
          "type": "number",
          "default": 800,
          "description": "Threshold in milliseconds to consider a double press, it resets the internal boolean after this time"
        },
        "vstoys.dot-repeat.enabled": {
          "type": "boolean",
          "default": true,
          "description": "Enable the Dot-Repeat module in VSCode Toys"
        }
      }
    },
    "keybindings": [
      {
        "command": "vstoys.double-action.execute",
        "key": "f21",
        "mac": "f21",
        "when": "editorTextFocus"
      },
      {
        "command": "vstoys.dot-repeat.repeatExit",
        "key": "escape",
        "mac": "escape",
        "args": {
          "contextId": "da-smart-select-repeat"
        },
        "when": "da-smart-select-repeat == true"
      },
      {
        "command": "vstoys.dot-repeat.repeatExecute",
        "key": "alt+a",
        "mac": "alt+a",
        "args": {
          "contextId": "da-smart-select-repeat",
          "command": "editor.action.smartSelect.expand"
        },
        "when": "editorTextFocus"
      },
      {
        "command": "vstoys.dot-repeat.repeatExecute",
        "key": "up",
        "mac": "up",
        "args": {
          "contextId": "da-smart-select-repeat",
          "command": "editor.action.smartSelect.expand"
        },
        "when": "editorTextFocus && da-smart-select-repeat == true"
      },
      {
        "command": "vstoys.dot-repeat.repeatExecute",
        "key": "down",
        "mac": "down",
        "args": {
          "contextId": "da-smart-select-repeat",
          "command": "editor.action.smartSelect.shrink"
        },
        "when": "editorTextFocus && da-smart-select-repeat == true"
      }
    ]
  },
  "scripts": {
    "ext": "vsce package -o vscode-toys.vsix && code --install-extension vscode-toys.vsix",
    "vsix": "vsce package -o vscode-toys.vsix",
    "vscode:prepublish": "npm run package",
    "compile": "webpack --node-env development",
    "tcompile": "tsc -p ./",
    "twatch": "tsc-watch -p ./",
    "watch": "webpack --watch --node-env development",
    "package": "webpack --node-env production --devtool hidden-source-map",
    "compile-tests": "tsc -p . --outDir out",
    "watch-tests": "tsc -p . -w --outDir out",
    "pretest": "npm run compile-tests && npm run compile && npm run lint",
    "lint": "eslint src",
    "test": "vscode-test"
  },
  "devDependencies": {
    "@types/mocha": "^10.0.8",
    "@types/node": "20.x",
    "@types/tmp": "^0.2.6",
    "@types/vscode": "^1.89.1",
    "@typescript-eslint/eslint-plugin": "^8.7.0",
    "@typescript-eslint/parser": "^8.7.0",
    "@vscode/test-cli": "^0.0.10",
    "@vscode/test-electron": "^2.4.1",
    "@vscode/vsce": "^3.1.1",
    "copy-webpack-plugin": "^12.0.2",
    "cross-env": "^7.0.3",
    "eslint": "^9.11.1",
    "jsonc": "^2.0.0",
    "ts-loader": "^9.5.1",
    "tsc-watch": "^6.2.0",
    "typescript": "^5.6.2",
    "webpack": "^5.95.0",
    "webpack-cli": "^5.1.4",
    "webpack-merge": "^6.0.1"
  },
  "dependencies": {
    "@hediet/node-reload": "^0.8.0",
    "@hediet/std": "^0.6.0",
    "@types/deindent": "^0.1.3",
    "deindent": "^0.1.0",
    "ignore": "^6.0.2",
    "minimatch": "^10.0.1",
    "parse-diff": "^0.11.1",
    "tmp": "^0.2.3"
  }
}